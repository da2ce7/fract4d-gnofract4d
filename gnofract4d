#!/usr/bin/env python3

# the main program. Relies on fract4d libs to do the real work

# python stdlib
import sys
import os

# gettext
import gettext
os.environ.setdefault('LANG', 'en')
if os.path.isdir('po'):
    gettext.install('gnofract4d','po')
else:
    gettext.install('gnofract4d')

try:
    # nogui modules
    from fract4d import fractconfig, fractal, fractmain, options

except ImportError as err:
    print((_('''
Can't import a required module.
If you haven't set up Gnofract 4D yet, run './setup.py build'
Error was: '%s' ''') % err))
    sys.exit(1)

def get_version_info():
    try:
        from gi.repository import Gtk
        gtk_version = "%d.%d.%d" % (Gtk.get_major_version(), Gtk.get_minor_version(), Gtk.get_micro_version())
    except:
        gtk_version = "unknown"

    return """Gnofract 4D %s
GTK %s""" % (options.version, gtk_version)
               
def main(args):    
    # saved options
    userConfig = fractconfig.userConfig()

    # command line options
    opts = options.T()
    try:
        opts.parse(args)
    except options.OptionError as err:
        print(get_version_info())
        print(opts.help())

        print("Error parsing arguments: %s" % err)
        return 1

    # having parsed them, apply them. The reason for this 2-pass
    # approach is that it matters what order these operations are
    # done in, but it shouldn't matter what order params are
    # presented on the command-line
    if len(opts.output) > 0:
        print(opts.output)

    if opts.print_version:
        print(get_version_info())
        
    if opts.quit_now:
        sys.exit(0)

    try:
        if opts.nogui:
            plainmain(userConfig, opts)
        else:
            gtkmain(userConfig, opts)
    except Exception as err:
        print("A fatal error occurred:\n\t%s\n\n" % str(err))
        raise

def gtkmain(userConfig, options):
    # gtk
    import gi
    gi.require_version('Gtk', '3.0')
    try:
        from gi.repository import Gtk
    except ImportError as err:
        print(_("Can't find Gtk. You need to install it before you can run Gnofract 4D."))
        sys.exit(1)

    try:
        # gui modules
        from fract4dgui import main_window, preferences, utils

    except ImportError as err:
        print(_('''
    Can't import a required module.
    If you haven't set up Gnofract 4D yet, run './setup.py build'
    Error was: '%s' ''') % err)
        sys.exit(1)
    
    mainWindow = main_window.MainWindow(userConfig)

    mainWindow.apply_options(options)
    
    if mainWindow.f.thaw():
        gi.require_version('GLib', '2.0')
        from gi.repository import GLib
        GLib.idle_add(mainWindow.on_fractal_change)

    Gtk.main()

def plainmain(userConfig, options):
    t = fractmain.T(userConfig)
    t.run(options)

def main_n(n):
    for i in range(n):
        main(sys.argv[1:])

if __name__ == '__main__':
    if os.environ.get("DO_GF4D_PROFILE"):
        import cProfile
        import pstats
        prof = cProfile.Profile()
        prof.runcall(main_n, 5)
        stats = pstats.Stats(prof)
        stats.sort_stats("cumulative")
        stats.dump_stats("gf4d.prof")
        stats.print_stats()
    else:
        main(sys.argv[1:])
