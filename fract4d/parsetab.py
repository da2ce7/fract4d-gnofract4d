
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '04CE51666DBC371446A9ACFD786DE587'
    
_lr_action_items = {'PARAM':([30,77,83,121,125,126,127,150,151,],[76,122,76,76,76,76,76,76,76,]),'ASSIGN':([32,36,50,51,53,79,84,162,163,],[-72,92,100,101,102,124,130,-73,-71,]),'LPAREN':([8,13,14,18,20,27,28,31,32,33,34,35,40,43,44,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,92,94,100,101,102,118,119,124,129,130,136,137,138,145,153,161,168,177,178,179,180,188,],[14,14,14,14,14,14,14,85,86,14,14,14,85,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,85,85,14,14,14,14,14,14,14,]),'ELSEIF':([15,16,17,19,23,25,26,32,36,41,43,44,46,55,56,57,73,84,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,130,133,137,138,139,140,159,160,162,163,164,165,166,167,169,170,175,190,],[-41,-37,-79,-87,-78,-42,-40,-72,-83,-77,-42,-42,-75,-82,-80,-42,-74,-44,-89,-38,-39,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-88,-42,-42,-49,-70,-45,-86,-73,-71,-46,178,180,-84,-47,-48,-43,-85,]),'TYPE':([8,13,14,17,18,19,20,22,23,25,27,28,30,32,33,34,35,36,41,43,44,46,48,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,83,85,86,87,92,93,94,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,124,125,126,127,129,130,133,136,137,138,140,143,144,145,146,150,151,160,161,162,163,167,168,177,178,179,180,188,190,],[31,40,40,-79,40,-87,40,50,-78,-42,40,40,77,-72,31,31,40,-83,-77,31,31,-75,50,-23,-82,-80,-42,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-74,77,40,40,40,40,-89,40,-76,50,40,145,40,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,31,31,77,153,77,77,77,40,31,-88,40,31,31,-70,-25,-24,-27,-26,77,77,-86,40,-73,-71,-84,40,31,40,31,40,40,-85,]),'TIMES':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,61,-72,-83,-77,61,61,-75,-82,-80,-42,61,-74,61,-89,-76,-81,61,-60,61,-58,61,-59,61,-61,61,61,61,61,61,61,61,-88,61,61,61,61,61,61,-86,-73,-71,61,-84,61,61,-85,]),'ENDWHILE':([15,16,17,19,23,25,26,32,36,41,43,44,46,55,56,57,73,84,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,130,133,139,140,147,148,159,160,162,163,164,167,169,170,175,190,],[-41,-37,-79,-87,-78,-42,-40,-72,-83,-77,-42,-42,-75,-82,-80,-42,-74,-44,-89,-38,-39,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,-42,-88,-49,-70,169,170,-45,-86,-73,-71,-46,-84,-47,-48,-43,-85,]),'ENDFUNC':([17,19,23,25,32,36,41,46,55,56,57,73,80,82,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,125,126,127,133,140,151,152,153,154,155,156,157,160,162,163,167,171,173,174,182,183,190,],[-79,-87,-78,-42,-72,-83,-77,-75,-82,-80,-42,-74,-17,-30,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,-42,-88,-70,-42,-28,-29,-18,-19,174,-35,-86,-73,-71,-84,-31,183,-33,-32,-34,-85,]),'CONST':([8,13,14,18,20,27,28,33,34,35,43,44,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,92,94,100,101,102,118,119,124,129,130,136,137,138,161,168,177,178,179,180,188,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'COMMA':([8,15,16,17,19,23,25,26,30,32,33,34,36,41,42,43,44,46,55,56,57,72,73,80,82,83,84,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,125,126,127,130,131,132,133,134,135,137,138,139,140,141,150,151,152,153,157,158,159,160,162,163,164,167,169,170,171,174,175,176,177,179,181,182,183,190,],[-42,-41,44,-79,-87,-78,-42,-40,-42,-72,-42,-42,-83,-77,94,-42,-42,-75,-82,-80,-42,119,-74,126,-30,-42,-44,138,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,-42,-42,-42,-42,-42,161,-90,-88,161,161,-42,-42,-49,-70,168,-42,-42,-28,-29,-35,161,-45,-86,-73,-71,-46,-84,-47,-48,-31,-33,-43,-91,-42,-42,188,-32,-34,-85,]),'MAG':([8,13,14,17,18,19,20,23,25,27,28,32,33,34,35,36,41,43,44,45,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,85,86,87,92,93,94,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,129,130,133,136,137,138,140,160,161,162,163,167,168,177,178,179,180,188,190,],[18,18,18,-79,18,-87,18,-78,-42,18,18,-72,18,18,18,-83,-77,18,18,97,-75,-82,-80,-42,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-74,18,18,18,18,-89,18,-76,18,18,18,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,18,18,18,18,18,-88,18,18,18,-70,-86,18,-73,-71,-84,18,18,18,18,18,18,-85,]),'NEQ':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,70,-72,-83,-77,70,70,-75,-82,-80,-42,70,-74,70,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,70,-67,-69,-57,-65,70,70,-88,70,70,70,70,70,70,-86,-73,-71,70,-84,70,70,-85,]),'COMPLEX':([8,13,14,18,20,27,28,33,34,35,43,44,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,92,94,100,101,102,118,119,124,129,130,136,137,138,161,168,177,178,179,180,188,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'PLUS':([8,13,14,17,18,19,20,23,25,26,27,28,32,33,34,35,36,41,42,43,44,45,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,86,87,90,92,93,94,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,129,130,132,133,136,137,138,140,141,143,144,146,152,160,161,162,163,164,167,168,177,178,179,180,181,188,189,190,],[20,20,20,-79,20,-87,20,-78,-42,58,20,20,-72,20,20,20,-83,-77,58,20,20,58,-75,-82,-80,-42,20,20,20,20,20,20,20,20,20,20,20,20,20,20,58,-74,20,20,20,58,20,-89,20,-76,20,20,20,-81,-56,-60,58,-58,58,-59,58,-61,58,58,58,-57,58,58,20,20,20,20,20,58,-88,20,20,20,58,58,58,58,58,58,-86,20,-73,-71,58,-84,20,20,20,20,20,58,20,58,-85,]),'LT':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,62,-72,-83,-77,62,62,-75,-82,-80,-42,62,-74,62,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,62,-67,-69,-57,-65,62,62,-88,62,62,62,62,62,62,-86,-73,-71,62,-84,62,62,-85,]),'SECT_PARMS':([8,15,16,17,19,22,23,24,25,26,29,30,32,33,36,41,43,44,46,48,49,52,55,56,57,73,78,80,82,84,88,93,95,96,97,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,125,126,130,133,139,140,142,143,144,145,146,152,153,154,155,157,159,160,162,163,164,167,169,170,171,174,175,182,183,190,],[22,-41,-37,-79,-87,-42,-78,22,-42,-40,22,-42,-72,-42,-83,-77,-42,-42,-75,-20,-15,-23,-82,-80,-42,-74,-16,-17,-30,-44,-36,-89,-38,-39,-76,-22,-42,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,-42,-88,-49,-70,-21,-25,-24,-27,-26,-28,-29,-18,-19,-35,-45,-86,-73,-71,-46,-84,-47,-48,-31,-33,-43,-32,-34,-85,]),'HEADING':([30,83,121,125,126,127,150,151,],[83,83,83,83,83,83,83,83,]),'LTE':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,67,-72,-83,-77,67,67,-75,-82,-80,-42,67,-74,67,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,67,-67,-69,-57,-65,67,67,-88,67,67,67,67,67,67,-86,-73,-71,67,-84,67,67,-85,]),'LARRAY':([32,84,],[87,129,]),'NUMBER':([8,13,14,18,20,27,28,33,34,35,43,44,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,92,94,100,101,102,118,119,124,129,130,136,137,138,161,168,177,178,179,180,188,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'error':([0,1,7,11,12,],[6,10,-6,6,10,]),'DIVIDE':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,63,-72,-83,-77,63,63,-75,-82,-80,-42,63,-74,63,-89,-76,-81,63,-60,63,-58,63,-59,63,-61,63,63,63,63,63,63,63,-88,63,63,63,63,63,63,-86,-73,-71,63,-84,63,63,-85,]),'BOOL_OR':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,71,-72,-83,-77,71,71,-75,-82,-80,-42,71,-74,71,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,71,-88,71,71,71,71,71,71,-86,-73,-71,71,-84,71,71,-85,]),'FORM_END':([8,10,15,16,17,19,21,22,23,24,25,26,29,30,32,33,36,41,43,44,46,48,49,52,54,55,56,57,73,75,78,80,82,84,88,93,95,96,97,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,125,126,130,133,139,140,142,143,144,145,146,152,153,154,155,157,159,160,162,163,164,167,169,170,171,174,175,182,183,190,],[-42,37,-41,-37,-79,-87,47,-42,-78,-14,-42,-40,74,-42,-72,-42,-83,-77,-42,-42,-75,-20,-15,-23,-13,-82,-80,-42,-74,120,-16,-17,-30,-44,-36,-89,-38,-39,-76,-22,-42,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,-42,-88,-49,-70,-21,-25,-24,-27,-26,-28,-29,-18,-19,-35,-45,-86,-73,-71,-46,-84,-47,-48,-31,-33,-43,-32,-34,-85,]),'NEWLINE':([1,3,7,8,9,12,15,16,17,19,22,23,25,26,30,32,33,34,36,37,39,41,43,44,46,47,48,52,55,56,57,72,73,74,80,82,83,84,90,93,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,130,133,137,138,139,140,143,144,145,146,150,151,152,153,157,159,160,162,163,164,167,169,170,171,174,175,177,179,182,183,190,],[8,11,-6,-42,-7,8,-41,43,-79,-87,-42,-78,-42,-40,-42,-72,-42,-42,-83,-11,-8,-77,-42,-42,-75,-12,99,-23,-82,-80,-42,118,-74,-10,125,-30,-42,-44,137,-89,-76,-42,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,-9,-42,-42,-42,-42,-42,-88,-42,-42,-49,-70,-25,-24,-27,-26,-42,-42,-28,-29,-35,-45,-86,-73,-71,-46,-84,-47,-48,-31,-33,-43,-42,-42,-32,-34,-85,]),'MOD':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,59,-72,-83,-77,59,59,-75,-82,-80,-42,59,-74,59,-89,-76,-81,59,-60,59,-58,59,-59,59,-61,59,59,59,59,59,59,59,-88,59,59,59,59,59,59,-86,-73,-71,59,-84,59,59,-85,]),'RPAREN':([17,19,23,25,32,36,41,42,46,55,56,57,73,86,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,131,132,133,134,140,141,160,162,163,167,176,189,190,],[-79,-87,-78,-42,-72,-83,-77,93,-75,-82,-80,-42,-74,133,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,160,-90,-88,162,-70,167,-86,-73,-71,-84,-91,190,-85,]),'STRING':([8,13,14,18,20,25,27,28,33,34,35,43,44,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,92,94,100,101,102,118,119,124,129,130,136,137,138,161,168,177,178,179,180,188,],[25,25,25,25,25,57,25,25,25,25,25,25,25,57,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'BOOL_NEG':([8,13,14,18,20,27,28,33,34,35,43,44,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,92,94,100,101,102,118,119,124,129,130,136,137,138,161,168,177,178,179,180,188,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'EQ':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,64,-72,-83,-77,64,64,-75,-82,-80,-42,64,-74,64,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,64,-67,-69,-57,-65,64,64,-88,64,64,64,64,64,64,-86,-73,-71,64,-84,64,64,-85,]),'POWER':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,65,-72,-83,65,65,65,65,-82,-80,-42,65,65,65,-89,-76,-81,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-88,65,65,65,65,65,65,-86,-73,-71,65,-84,65,65,-85,]),'BOOL_AND':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,66,-72,-83,-77,66,66,-75,-82,-80,-42,66,-74,66,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,66,-88,66,66,66,66,66,66,-86,-73,-71,66,-84,66,66,-85,]),'GT':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,60,-72,-83,-77,60,60,-75,-82,-80,-42,60,-74,60,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,60,-67,-69,-57,-65,60,60,-88,60,60,60,60,60,60,-86,-73,-71,60,-84,60,60,-85,]),'UNTIL':([15,16,17,19,23,25,26,32,34,36,41,43,44,46,55,56,57,73,84,89,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,130,133,139,140,159,160,162,163,164,167,169,170,175,190,],[-41,-37,-79,-87,-78,-42,-40,-72,-42,-83,-77,-42,-42,-75,-82,-80,-42,-74,-44,136,-89,-38,-39,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-88,-49,-70,-45,-86,-73,-71,-46,-84,-47,-48,-43,-85,]),'ENDHEADING':([17,19,23,25,32,36,41,46,55,56,57,73,80,82,83,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,125,126,128,133,140,152,153,154,155,157,160,162,163,167,171,174,182,183,190,],[-79,-87,-78,-42,-72,-83,-77,-75,-82,-80,-42,-74,-17,-30,-42,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,157,-88,-70,-28,-29,-18,-19,-35,-86,-73,-71,-84,-31,-33,-32,-34,-85,]),'WHILE':([8,33,34,43,44,118,119,130,137,138,177,179,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'ELSE':([15,16,17,19,23,25,26,32,36,41,43,44,46,55,56,57,73,84,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,130,133,137,138,139,140,159,160,162,163,164,165,166,167,169,170,175,190,],[-41,-37,-79,-87,-78,-42,-40,-72,-83,-77,-42,-42,-75,-82,-80,-42,-74,-44,-89,-38,-39,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-88,-42,-42,-49,-70,-45,-86,-73,-71,-46,177,179,-84,-47,-48,-43,-85,]),'MINUS':([8,13,14,17,18,19,20,23,25,26,27,28,32,33,34,35,36,41,42,43,44,45,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,85,86,87,90,92,93,94,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,129,130,132,133,136,137,138,140,141,143,144,146,152,160,161,162,163,164,167,168,177,178,179,180,181,188,189,190,],[28,28,28,-79,28,-87,28,-78,-42,69,28,28,-72,28,28,28,-83,-77,69,28,28,69,-75,-82,-80,-42,28,28,28,28,28,28,28,28,28,28,28,28,28,28,69,-74,28,28,28,69,28,-89,28,-76,28,28,28,-81,-56,-60,69,-58,69,-59,69,-61,69,69,69,-57,69,69,28,28,28,28,28,69,-88,28,28,28,69,69,69,69,69,69,-86,28,-73,-71,69,-84,28,28,28,28,28,69,28,69,-85,]),'RARRAY':([17,19,23,25,32,36,41,46,55,56,57,73,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,135,140,158,160,162,163,167,176,190,],[-79,-87,-78,-42,-72,-83,-77,-75,-82,-80,-42,-74,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-90,-88,163,-70,175,-86,-73,-71,-84,-91,-85,]),'FUNC':([30,77,83,121,125,126,127,150,151,],[81,123,81,81,81,81,81,81,81,]),'SECT_SET':([8,15,16,17,19,22,23,24,25,26,29,30,32,33,36,41,43,44,46,48,49,52,55,56,57,73,78,80,82,84,88,93,95,96,97,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,125,126,130,133,139,140,142,143,144,145,146,152,153,154,155,157,159,160,162,163,164,167,169,170,171,174,175,182,183,190,],[30,-41,-37,-79,-87,-42,-78,30,-42,-40,30,-42,-72,-42,-83,-77,-42,-42,-75,-20,-15,-23,-82,-80,-42,-74,-16,-17,-30,-44,-36,-89,-38,-39,-76,-22,-42,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,-42,-88,-49,-70,-21,-25,-24,-27,-26,-28,-29,-18,-19,-35,-45,-86,-73,-71,-46,-84,-47,-48,-31,-33,-43,-32,-34,-85,]),'$end':([0,2,3,4,5,6,9,11,37,38,39,47,74,120,],[-42,-1,-3,-4,0,-5,-7,-42,-11,-2,-8,-12,-10,-9,]),'ID':([8,13,14,17,18,19,20,22,23,25,27,28,30,31,32,33,34,35,36,41,43,44,46,48,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,81,83,85,86,87,92,93,94,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,129,130,133,136,137,138,140,143,144,145,146,150,151,160,161,162,163,167,168,177,178,179,180,188,190,],[32,32,32,-79,32,-87,32,51,-78,-42,32,32,79,84,-72,32,32,32,-83,-77,32,32,-75,51,-23,-82,-80,-42,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-74,121,127,79,32,32,32,32,-89,32,-76,51,32,32,32,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,32,32,79,150,151,32,79,79,79,32,32,-88,32,32,32,-70,-25,-24,-27,-26,79,79,-86,32,-73,-71,-84,32,32,32,32,32,32,-85,]),'SECT_STM':([8,15,16,17,19,22,23,24,25,26,29,30,32,33,36,41,43,44,46,48,49,52,55,56,57,73,78,80,82,84,88,93,95,96,97,98,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,125,126,130,133,139,140,142,143,144,145,146,152,153,154,155,157,159,160,162,163,164,167,169,170,171,174,175,182,183,190,],[33,-41,-37,-79,-87,-42,-78,33,-42,-40,33,-42,-72,-42,-83,-77,-42,-42,-75,-20,-15,-23,-82,-80,-42,-74,-16,-17,-30,-44,-36,-89,-38,-39,-76,-22,-42,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,-42,-88,-49,-70,-21,-25,-24,-27,-26,-28,-29,-18,-19,-35,-45,-86,-73,-71,-46,-84,-47,-48,-31,-33,-43,-32,-34,-85,]),'FORM_ID':([0,6,11,],[7,7,7,]),'ENDPARAM':([17,19,23,25,32,36,41,46,55,56,57,73,80,82,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,125,126,133,140,149,150,152,153,154,155,157,160,162,163,167,171,172,174,182,183,190,],[-79,-87,-78,-42,-72,-83,-77,-75,-82,-80,-42,-74,-17,-30,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-42,-42,-88,-70,171,-42,-28,-29,-18,-19,-35,-86,-73,-71,-84,-31,182,-33,-32,-34,-85,]),'ENDIF':([15,16,17,19,23,25,26,32,36,41,43,44,46,55,56,57,73,84,91,93,95,96,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,130,133,137,138,139,140,159,160,162,163,164,165,166,167,169,170,175,177,179,184,185,186,187,190,],[-41,-37,-79,-87,-78,-42,-40,-72,-83,-77,-42,-42,-75,-82,-80,-42,-74,-44,139,-89,-38,-39,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,-42,-88,-42,-42,-49,-70,-45,-86,-73,-71,-46,-50,-51,-84,-47,-48,-43,-42,-42,-52,-54,-53,-55,-85,]),'GTE':([17,19,23,25,26,32,36,41,42,45,46,55,56,57,72,73,90,93,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,133,140,141,143,144,146,152,160,162,163,164,167,181,189,190,],[-79,-87,-78,-42,68,-72,-83,-77,68,68,-75,-82,-80,-42,68,-74,68,-89,-76,-81,-56,-60,-68,-58,-66,-59,-64,-61,68,-67,-69,-57,-65,68,68,-88,68,68,68,68,68,68,-86,-73,-71,68,-84,68,68,-85,]),'REPEAT':([8,17,19,22,23,25,32,33,34,36,41,43,44,46,48,52,55,56,57,73,93,97,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,130,133,137,138,140,143,144,145,146,160,162,163,167,177,179,190,],[34,-79,-87,53,-78,-42,-72,34,34,-83,-77,34,34,-75,53,-23,-82,-80,-42,-74,-89,-76,53,-81,-56,-60,-68,-58,-66,-59,-64,-61,-63,-67,-69,-57,-65,-62,34,34,34,-88,34,34,-70,-25,-24,-27,-26,-86,-73,-71,-84,34,34,-85,]),'IF':([8,33,34,43,44,118,119,130,137,138,177,179,],[35,35,35,35,35,35,35,35,35,35,35,35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ifbody':([35,178,180,],[91,185,187,]),'file':([0,],[5,]),'section':([8,24,29,],[24,24,24,]),'formlist':([0,11,],[2,38,]),'arglist':([85,86,87,129,161,],[131,134,135,158,176,]),'formula':([0,11,],[3,3,]),'empty':([0,8,11,22,25,30,33,34,43,44,48,57,83,99,118,119,121,125,126,127,130,137,138,150,151,177,179,],[4,15,4,52,55,82,15,15,15,15,52,55,82,52,15,15,82,82,82,82,15,15,15,82,82,15,15,]),'sectlist':([8,24,29,],[21,54,75,]),'setlist':([30,83,121,125,126,127,150,151,],[78,128,149,154,155,156,172,173,]),'exp':([8,13,14,18,20,27,28,33,34,35,43,44,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,92,94,100,101,102,118,119,124,129,130,136,137,138,161,168,177,178,179,180,188,],[26,41,42,45,46,72,73,26,26,90,26,26,104,105,106,107,108,109,110,111,112,113,114,115,116,117,132,132,132,140,141,143,144,146,26,26,152,132,26,164,26,26,132,181,26,90,26,90,189,]),'parm':([22,48,99,],[48,48,48,]),'stringlist':([25,57,],[56,103,]),'parmlist':([22,48,99,],[49,98,142,]),'stm':([8,33,34,43,44,118,119,130,137,138,177,179,],[16,16,16,16,16,16,16,159,16,16,16,16,]),'set':([30,83,121,125,126,127,150,151,],[80,80,80,80,80,80,80,80,]),'formbody':([1,12,],[9,39,]),'formid':([0,6,11,],[1,12,1,]),'stmlist':([8,33,34,43,44,118,119,137,138,177,179,],[29,88,89,95,96,147,148,165,166,184,186,]),'lval':([8,13,14,18,20,27,28,33,34,35,43,44,58,59,60,61,62,63,64,65,66,67,68,69,70,71,85,86,87,92,94,100,101,102,118,119,124,129,130,136,137,138,161,168,177,178,179,180,188,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> formlist','file',1,'p_file','fractparser.py',33),
  ('formlist -> formula NEWLINE formlist','formlist',3,'p_formlist','fractparser.py',38),
  ('formlist -> formula','formlist',1,'p_formlist_singleform','fractparser.py',42),
  ('formlist -> empty','formlist',1,'p_formlist_empty','fractparser.py',46),
  ('formlist -> error','formlist',1,'p_formlist_empty','fractparser.py',47),
  ('formid -> FORM_ID','formid',1,'p_formid','fractparser.py',51),
  ('formula -> formid formbody','formula',2,'p_formula','fractparser.py',55),
  ('formula -> error formid formbody','formula',3,'p_formula_err','fractparser.py',59),
  ('formbody -> NEWLINE stmlist sectlist FORM_END','formbody',4,'p_formbody_2','fractparser.py',63),
  ('formbody -> NEWLINE stmlist FORM_END','formbody',3,'p_formbody_3','fractparser.py',67),
  ('formbody -> error FORM_END','formbody',2,'p_formbody_err','fractparser.py',71),
  ('formbody -> NEWLINE sectlist FORM_END','formbody',3,'p_formbody_sectlist','fractparser.py',75),
  ('sectlist -> section sectlist','sectlist',2,'p_sectlist_2','fractparser.py',79),
  ('sectlist -> section','sectlist',1,'p_sectlist_section','fractparser.py',83),
  ('section -> SECT_PARMS parmlist','section',2,'p_section_parm','fractparser.py',87),
  ('section -> SECT_SET setlist','section',2,'p_section_set','fractparser.py',91),
  ('setlist -> set','setlist',1,'p_setlist_set','fractparser.py',95),
  ('setlist -> set NEWLINE setlist','setlist',3,'p_setlist_2','fractparser.py',99),
  ('setlist -> set COMMA setlist','setlist',3,'p_setlist_2','fractparser.py',100),
  ('parmlist -> parm','parmlist',1,'p_parmlist_parm','fractparser.py',104),
  ('parmlist -> parm NEWLINE parmlist','parmlist',3,'p_parmlist_2','fractparser.py',108),
  ('parmlist -> parm parmlist','parmlist',2,'p_parmlist_3','fractparser.py',112),
  ('parm -> empty','parm',1,'p_parm_empty','fractparser.py',116),
  ('parm -> ID ASSIGN exp','parm',3,'p_parm_exp','fractparser.py',121),
  ('parm -> TYPE ASSIGN exp','parm',3,'p_parm_exp','fractparser.py',122),
  ('parm -> REPEAT ASSIGN exp','parm',3,'p_parm_exp','fractparser.py',123),
  ('parm -> ID ASSIGN TYPE','parm',3,'p_parm_type','fractparser.py',127),
  ('set -> ID ASSIGN exp','set',3,'p_set_exp','fractparser.py',131),
  ('set -> ID ASSIGN TYPE','set',3,'p_set_type','fractparser.py',135),
  ('set -> empty','set',1,'p_set_empty','fractparser.py',139),
  ('set -> PARAM ID setlist ENDPARAM','set',4,'p_set_param','fractparser.py',143),
  ('set -> TYPE PARAM ID setlist ENDPARAM','set',5,'p_set_typed_param','fractparser.py',147),
  ('set -> FUNC ID setlist ENDFUNC','set',4,'p_set_func','fractparser.py',151),
  ('set -> TYPE FUNC ID setlist ENDFUNC','set',5,'p_set_typed_func','fractparser.py',155),
  ('set -> HEADING setlist ENDHEADING','set',3,'p_set_heading','fractparser.py',159),
  ('section -> SECT_STM stmlist','section',2,'p_section_stm_2','fractparser.py',163),
  ('stmlist -> stm','stmlist',1,'p_stmlist_stm','fractparser.py',173),
  ('stmlist -> stm NEWLINE stmlist','stmlist',3,'p_stmlist_2','fractparser.py',177),
  ('stmlist -> stm COMMA stmlist','stmlist',3,'p_stmlist_2','fractparser.py',178),
  ('stm -> exp','stm',1,'p_stm_exp','fractparser.py',182),
  ('stm -> empty','stm',1,'p_stm_empty','fractparser.py',186),
  ('empty -> <empty>','empty',0,'p_empty','fractparser.py',190),
  ('stm -> TYPE ID LARRAY arglist RARRAY','stm',5,'p_stm_decl_array','fractparser.py',194),
  ('stm -> TYPE ID','stm',2,'p_stm_decl','fractparser.py',198),
  ('stm -> TYPE ID ASSIGN stm','stm',4,'p_stm_assign','fractparser.py',202),
  ('stm -> REPEAT stmlist UNTIL exp','stm',4,'p_stm_repeat','fractparser.py',206),
  ('stm -> WHILE exp NEWLINE stmlist ENDWHILE','stm',5,'p_stm_while','fractparser.py',210),
  ('stm -> WHILE exp COMMA stmlist ENDWHILE','stm',5,'p_stm_while','fractparser.py',211),
  ('stm -> IF ifbody ENDIF','stm',3,'p_stm_if','fractparser.py',215),
  ('ifbody -> exp NEWLINE stmlist','ifbody',3,'p_ifbody','fractparser.py',219),
  ('ifbody -> exp COMMA stmlist','ifbody',3,'p_ifbody','fractparser.py',220),
  ('ifbody -> exp NEWLINE stmlist ELSE stmlist','ifbody',5,'p_ifbody_else','fractparser.py',224),
  ('ifbody -> exp COMMA stmlist ELSE stmlist','ifbody',5,'p_ifbody_else','fractparser.py',225),
  ('ifbody -> exp NEWLINE stmlist ELSEIF ifbody','ifbody',5,'p_ifbody_elseif','fractparser.py',229),
  ('ifbody -> exp COMMA stmlist ELSEIF ifbody','ifbody',5,'p_ifbody_elseif','fractparser.py',230),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','fractparser.py',234),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','fractparser.py',235),
  ('exp -> exp TIMES exp','exp',3,'p_exp_binop','fractparser.py',236),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','fractparser.py',237),
  ('exp -> exp MOD exp','exp',3,'p_exp_binop','fractparser.py',238),
  ('exp -> exp POWER exp','exp',3,'p_exp_binop','fractparser.py',239),
  ('exp -> exp BOOL_OR exp','exp',3,'p_exp_binop','fractparser.py',240),
  ('exp -> exp BOOL_AND exp','exp',3,'p_exp_binop','fractparser.py',241),
  ('exp -> exp EQ exp','exp',3,'p_exp_binop','fractparser.py',242),
  ('exp -> exp NEQ exp','exp',3,'p_exp_binop','fractparser.py',243),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','fractparser.py',244),
  ('exp -> exp LTE exp','exp',3,'p_exp_binop','fractparser.py',245),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','fractparser.py',246),
  ('exp -> exp GTE exp','exp',3,'p_exp_binop','fractparser.py',247),
  ('exp -> lval ASSIGN exp','exp',3,'p_exp_assign','fractparser.py',252),
  ('lval -> ID LARRAY arglist RARRAY','lval',4,'p_lval_id_array','fractparser.py',256),
  ('lval -> ID','lval',1,'p_lval_id','fractparser.py',260),
  ('lval -> ID LPAREN arglist RPAREN','lval',4,'p_lval_funcall','fractparser.py',264),
  ('exp -> MINUS exp','exp',2,'p_exp_uminus','fractparser.py',268),
  ('exp -> PLUS exp','exp',2,'p_exp_uplus','fractparser.py',273),
  ('exp -> MAG exp MAG','exp',3,'p_exp_mag','fractparser.py',277),
  ('exp -> BOOL_NEG exp','exp',2,'p_exp_neg','fractparser.py',281),
  ('exp -> NUMBER','exp',1,'p_exp_num','fractparser.py',285),
  ('exp -> CONST','exp',1,'p_exp_boolconst','fractparser.py',289),
  ('exp -> STRING stringlist','exp',2,'p_exp_string','fractparser.py',293),
  ('stringlist -> STRING stringlist','stringlist',2,'p_stringlist_string','fractparser.py',297),
  ('stringlist -> empty','stringlist',1,'p_stringlist_empty','fractparser.py',301),
  ('exp -> lval','exp',1,'p_exp_lval','fractparser.py',305),
  ('exp -> LPAREN exp COMMA exp RPAREN','exp',5,'p_exp_complex','fractparser.py',309),
  ('exp -> LPAREN exp COMMA exp COMMA exp COMMA exp RPAREN','exp',9,'p_exp_hyper','fractparser.py',313),
  ('exp -> TYPE LPAREN arglist RPAREN','exp',4,'p_exp_ctor','fractparser.py',317),
  ('exp -> COMPLEX','exp',1,'p_exp_complex_i','fractparser.py',321),
  ('exp -> ID LPAREN RPAREN','exp',3,'p_exp_funcall_noargs','fractparser.py',326),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_parexp','fractparser.py',330),
  ('arglist -> exp','arglist',1,'p_arglist_exp','fractparser.py',334),
  ('arglist -> arglist COMMA arglist','arglist',3,'p_arglist_2','fractparser.py',338),
]
