
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '992F2B395D8BC780E34E9349375FD974'
    
_lr_action_items = {'error':([0,6,7,8,9,],[5,12,-6,5,12,]),'$end':([0,1,2,3,4,5,8,10,13,14,39,41,42,93,],[-42,0,-1,-3,-4,-5,-42,-7,-2,-8,-11,-10,-12,-9,]),'FORM_ID':([0,5,8,],[7,7,7,]),'NEWLINE':([3,6,7,9,10,11,14,17,19,20,22,23,26,27,28,31,34,35,36,38,39,41,42,43,44,60,65,68,70,71,76,79,82,84,85,88,89,90,91,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,118,119,120,121,122,123,128,129,133,134,136,137,138,140,142,143,145,146,147,153,154,155,156,159,160,161,162,165,167,169,170,171,173,177,178,180,185,186,190,],[8,11,-6,11,-7,-42,-8,43,-40,-41,-72,-42,-42,-42,-42,-83,-78,-79,-42,-87,-11,-10,-12,-42,-42,-44,118,121,123,-23,128,-30,-42,-75,-74,-77,-42,-80,-82,-9,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-42,-42,-49,-42,-42,-42,-42,-42,-42,-42,-70,-76,-81,-89,-45,-86,-73,-71,-46,-24,-27,-25,-26,-28,-29,-42,-42,-35,-43,-47,-48,-42,-42,-31,-33,-84,-32,-34,-85,]),'TYPE':([11,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,70,71,82,84,85,86,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,117,118,119,121,122,123,125,126,127,128,129,130,133,134,136,137,138,139,140,143,144,145,146,153,154,155,156,161,162,171,172,173,174,179,180,188,190,],[21,-72,21,66,66,73,78,21,66,66,-83,66,66,-78,-79,-42,66,-87,21,21,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,73,-23,78,-75,-74,66,-77,-42,-80,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,66,21,-88,66,21,21,21,21,73,154,66,66,78,78,160,78,78,-70,-76,-81,66,-89,-86,66,-73,-71,-24,-27,-25,-26,78,78,21,66,21,66,66,-84,66,-85,]),'REPEAT':([11,22,23,26,28,31,34,35,36,38,43,44,70,71,84,85,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,118,119,121,122,123,136,137,138,140,143,145,146,153,154,155,156,171,173,180,190,],[23,-72,23,74,23,-83,-78,-79,-42,-87,23,23,74,-23,-75,-74,-77,-42,-80,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,23,-88,23,23,23,23,74,-70,-76,-81,-89,-86,-73,-71,-24,-27,-25,-26,23,23,-84,-85,]),'WHILE':([11,23,28,43,44,111,118,119,121,122,171,173,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'IF':([11,23,28,43,44,111,118,119,121,122,171,173,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'SECT_PARMS':([11,15,17,18,19,20,22,26,27,28,31,34,35,36,38,43,44,60,69,70,71,75,76,79,83,84,85,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,120,123,124,128,129,136,137,138,140,142,143,145,146,147,152,153,154,155,156,157,158,159,160,165,167,169,170,177,178,180,185,186,190,],[26,26,-37,26,-40,-41,-72,-42,-42,-42,-83,-78,-79,-42,-87,-42,-42,-44,-15,-20,-23,-16,-17,-30,-36,-75,-74,-77,-42,-80,-82,-38,-39,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-49,-42,-22,-42,-42,-70,-76,-81,-89,-45,-86,-73,-71,-46,-21,-24,-27,-25,-26,-18,-19,-28,-29,-35,-43,-47,-48,-31,-33,-84,-32,-34,-85,]),'SECT_SET':([11,15,17,18,19,20,22,26,27,28,31,34,35,36,38,43,44,60,69,70,71,75,76,79,83,84,85,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,120,123,124,128,129,136,137,138,140,142,143,145,146,147,152,153,154,155,156,157,158,159,160,165,167,169,170,177,178,180,185,186,190,],[27,27,-37,27,-40,-41,-72,-42,-42,-42,-83,-78,-79,-42,-87,-42,-42,-44,-15,-20,-23,-16,-17,-30,-36,-75,-74,-77,-42,-80,-82,-38,-39,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-49,-42,-22,-42,-42,-70,-76,-81,-89,-45,-86,-73,-71,-46,-21,-24,-27,-25,-26,-18,-19,-28,-29,-35,-43,-47,-48,-31,-33,-84,-32,-34,-85,]),'SECT_STM':([11,15,17,18,19,20,22,26,27,28,31,34,35,36,38,43,44,60,69,70,71,75,76,79,83,84,85,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,120,123,124,128,129,136,137,138,140,142,143,145,146,147,152,153,154,155,156,157,158,159,160,165,167,169,170,177,178,180,185,186,190,],[28,28,-37,28,-40,-41,-72,-42,-42,-42,-83,-78,-79,-42,-87,-42,-42,-44,-15,-20,-23,-16,-17,-30,-36,-75,-74,-77,-42,-80,-82,-38,-39,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-49,-42,-22,-42,-42,-70,-76,-81,-89,-45,-86,-73,-71,-46,-21,-24,-27,-25,-26,-18,-19,-28,-29,-35,-43,-47,-48,-31,-33,-84,-32,-34,-85,]),'MINUS':([11,19,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,65,68,84,85,86,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,117,118,119,121,122,125,126,127,130,136,137,138,139,140,143,144,145,146,147,153,155,156,159,166,171,172,173,174,179,180,187,188,189,190,],[30,47,-72,30,30,30,30,30,30,-83,30,30,-78,-79,-42,30,-87,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,47,47,-75,-74,30,47,-77,-42,-80,-82,47,-56,-57,-58,-59,-60,-61,47,47,47,47,47,47,47,47,30,30,47,-88,30,30,30,30,30,30,30,30,30,47,-76,-81,30,-89,-86,30,-73,-71,47,47,47,47,47,47,30,30,30,30,30,-84,47,30,47,-85,]),'PLUS':([11,19,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,65,68,84,85,86,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,117,118,119,121,122,125,126,127,130,136,137,138,139,140,143,144,145,146,147,153,155,156,159,166,171,172,173,174,179,180,187,188,189,190,],[29,46,-72,29,29,29,29,29,29,-83,29,29,-78,-79,-42,29,-87,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,46,46,-75,-74,29,46,-77,-42,-80,-82,46,-56,-57,-58,-59,-60,-61,46,46,46,46,46,46,46,46,29,29,46,-88,29,29,29,29,29,29,29,29,29,46,-76,-81,29,-89,-86,29,-73,-71,46,46,46,46,46,46,29,29,29,29,29,-84,46,29,46,-85,]),'MAG':([11,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,84,85,86,87,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,117,118,119,121,122,125,126,127,130,136,137,138,139,140,143,144,145,146,171,172,173,174,179,180,188,190,],[32,-72,32,32,32,32,32,32,-83,32,32,-78,-79,-42,32,-87,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-75,-74,32,137,-77,-42,-80,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,32,32,-88,32,32,32,32,32,32,32,32,32,-70,-76,-81,32,-89,-86,32,-73,-71,32,32,32,32,32,-84,32,-85,]),'BOOL_NEG':([11,23,24,25,28,29,30,32,33,37,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,86,110,111,117,118,119,121,122,125,126,127,130,139,144,171,172,173,174,179,188,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'NUMBER':([11,23,24,25,28,29,30,32,33,37,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,86,110,111,117,118,119,121,122,125,126,127,130,139,144,171,172,173,174,179,188,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'CONST':([11,23,24,25,28,29,30,32,33,37,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,86,110,111,117,118,119,121,122,125,126,127,130,139,144,171,172,173,174,179,188,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'STRING':([11,23,24,25,28,29,30,32,33,36,37,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,86,89,110,111,117,118,119,121,122,125,126,127,130,139,144,171,172,173,174,179,188,],[36,36,36,36,36,36,36,36,36,89,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,89,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LPAREN':([11,21,22,23,24,25,28,29,30,32,33,37,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,66,86,110,111,117,118,119,121,122,125,126,127,130,139,144,154,160,171,172,173,174,179,188,],[37,61,62,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,61,37,37,37,37,37,37,37,37,37,37,37,37,37,37,61,61,37,37,37,37,37,37,]),'COMPLEX':([11,23,24,25,28,29,30,32,33,37,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,86,110,111,117,118,119,121,122,125,126,127,130,139,144,171,172,173,174,179,188,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'ID':([11,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,70,71,80,81,82,84,85,86,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,117,118,119,121,122,123,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,143,144,145,146,153,154,155,156,161,162,171,172,173,174,179,180,188,190,],[22,60,-72,22,22,22,72,77,22,22,22,-83,22,22,-78,-79,-42,22,-87,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,72,-23,133,134,77,-75,-74,22,-77,-42,-80,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,22,22,-88,22,22,22,22,22,72,22,22,22,77,77,22,161,162,77,77,-70,-76,-81,22,-89,-86,22,-73,-71,-24,-27,-25,-26,77,77,22,22,22,22,22,-84,22,-85,]),'COMMA':([11,17,19,20,22,23,27,28,31,34,35,36,38,43,44,60,65,68,76,79,82,84,85,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,118,119,120,121,122,128,129,133,134,136,137,138,140,141,142,143,145,146,147,159,160,161,162,165,166,167,168,169,170,171,173,177,178,180,185,186,187,190,],[-42,44,-40,-41,-72,-42,-42,-42,-83,-78,-79,-42,-87,-42,-42,-44,119,122,129,-30,-42,-75,-74,-77,-42,-80,-82,139,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,144,-90,-88,144,144,-42,-42,-49,-42,-42,-42,-42,-42,-42,-70,-76,-81,-89,144,-45,-86,-73,-71,-46,-28,-29,-42,-42,-35,179,-43,-91,-47,-48,-42,-42,-31,-33,-84,-32,-34,188,-85,]),'FORM_END':([11,12,15,16,17,18,19,20,22,26,27,28,31,34,35,36,38,40,43,44,45,60,69,70,71,75,76,79,83,84,85,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,120,123,124,128,129,136,137,138,140,142,143,145,146,147,152,153,154,155,156,157,158,159,160,165,167,169,170,177,178,180,185,186,190,],[-42,39,41,42,-37,-14,-40,-41,-72,-42,-42,-42,-83,-78,-79,-42,-87,93,-42,-42,-13,-44,-15,-20,-23,-16,-17,-30,-36,-75,-74,-77,-42,-80,-82,-38,-39,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-49,-42,-22,-42,-42,-70,-76,-81,-89,-45,-86,-73,-71,-46,-21,-24,-27,-25,-26,-18,-19,-28,-29,-35,-43,-47,-48,-31,-33,-84,-32,-34,-85,]),'UNTIL':([17,19,20,22,23,31,34,35,36,38,43,44,60,64,84,85,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,120,136,137,138,140,142,143,145,146,147,167,169,170,180,190,],[-37,-40,-41,-72,-42,-83,-78,-79,-42,-87,-42,-42,-44,117,-75,-74,-77,-42,-80,-82,-38,-39,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-49,-70,-76,-81,-89,-45,-86,-73,-71,-46,-43,-47,-48,-84,-85,]),'ENDWHILE':([17,19,20,22,31,34,35,36,38,43,44,60,84,85,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,118,119,120,136,137,138,140,142,143,145,146,147,148,149,167,169,170,180,190,],[-37,-40,-41,-72,-83,-78,-79,-42,-87,-42,-42,-44,-75,-74,-77,-42,-80,-82,-38,-39,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-42,-42,-49,-70,-76,-81,-89,-45,-86,-73,-71,-46,169,170,-43,-47,-48,-84,-85,]),'ELSE':([17,19,20,22,31,34,35,36,38,43,44,60,84,85,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,120,121,122,136,137,138,140,142,143,145,146,147,150,151,167,169,170,180,190,],[-37,-40,-41,-72,-83,-78,-79,-42,-87,-42,-42,-44,-75,-74,-77,-42,-80,-82,-38,-39,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-49,-42,-42,-70,-76,-81,-89,-45,-86,-73,-71,-46,171,173,-43,-47,-48,-84,-85,]),'ELSEIF':([17,19,20,22,31,34,35,36,38,43,44,60,84,85,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,120,121,122,136,137,138,140,142,143,145,146,147,150,151,167,169,170,180,190,],[-37,-40,-41,-72,-83,-78,-79,-42,-87,-42,-42,-44,-75,-74,-77,-42,-80,-82,-38,-39,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-49,-42,-42,-70,-76,-81,-89,-45,-86,-73,-71,-46,172,174,-43,-47,-48,-84,-85,]),'ENDIF':([17,19,20,22,31,34,35,36,38,43,44,60,67,84,85,88,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,114,120,121,122,136,137,138,140,142,143,145,146,147,150,151,167,169,170,171,173,180,181,182,183,184,190,],[-37,-40,-41,-72,-83,-78,-79,-42,-87,-42,-42,-44,120,-75,-74,-77,-42,-80,-82,-38,-39,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-42,-88,-49,-42,-42,-70,-76,-81,-89,-45,-86,-73,-71,-46,-50,-51,-43,-47,-48,-42,-42,-84,-52,-54,-53,-55,-85,]),'TIMES':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[48,-72,-83,-78,-79,-42,-87,48,48,-75,-74,48,-77,-42,-80,-82,48,48,48,-58,-59,-60,-61,48,48,48,48,48,48,48,48,48,-88,48,-76,-81,-89,-86,-73,-71,48,48,48,48,48,48,-84,48,48,-85,]),'DIVIDE':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[49,-72,-83,-78,-79,-42,-87,49,49,-75,-74,49,-77,-42,-80,-82,49,49,49,-58,-59,-60,-61,49,49,49,49,49,49,49,49,49,-88,49,-76,-81,-89,-86,-73,-71,49,49,49,49,49,49,-84,49,49,-85,]),'MOD':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[50,-72,-83,-78,-79,-42,-87,50,50,-75,-74,50,-77,-42,-80,-82,50,50,50,-58,-59,-60,-61,50,50,50,50,50,50,50,50,50,-88,50,-76,-81,-89,-86,-73,-71,50,50,50,50,50,50,-84,50,50,-85,]),'POWER':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[51,-72,-83,-78,-79,-42,-87,51,51,51,51,51,51,-42,-80,-82,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-88,51,-76,-81,-89,-86,-73,-71,51,51,51,51,51,51,-84,51,51,-85,]),'BOOL_OR':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[52,-72,-83,-78,-79,-42,-87,52,52,-75,-74,52,-77,-42,-80,-82,52,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,52,-88,52,-76,-81,-89,-86,-73,-71,52,52,52,52,52,52,-84,52,52,-85,]),'BOOL_AND':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[53,-72,-83,-78,-79,-42,-87,53,53,-75,-74,53,-77,-42,-80,-82,53,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,53,-88,53,-76,-81,-89,-86,-73,-71,53,53,53,53,53,53,-84,53,53,-85,]),'EQ':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[54,-72,-83,-78,-79,-42,-87,54,54,-75,-74,54,-77,-42,-80,-82,54,-56,-57,-58,-59,-60,-61,54,54,-64,-65,-66,-67,-68,-69,54,-88,54,-76,-81,-89,-86,-73,-71,54,54,54,54,54,54,-84,54,54,-85,]),'NEQ':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[55,-72,-83,-78,-79,-42,-87,55,55,-75,-74,55,-77,-42,-80,-82,55,-56,-57,-58,-59,-60,-61,55,55,-64,-65,-66,-67,-68,-69,55,-88,55,-76,-81,-89,-86,-73,-71,55,55,55,55,55,55,-84,55,55,-85,]),'LT':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[56,-72,-83,-78,-79,-42,-87,56,56,-75,-74,56,-77,-42,-80,-82,56,-56,-57,-58,-59,-60,-61,56,56,-64,-65,-66,-67,-68,-69,56,-88,56,-76,-81,-89,-86,-73,-71,56,56,56,56,56,56,-84,56,56,-85,]),'LTE':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[57,-72,-83,-78,-79,-42,-87,57,57,-75,-74,57,-77,-42,-80,-82,57,-56,-57,-58,-59,-60,-61,57,57,-64,-65,-66,-67,-68,-69,57,-88,57,-76,-81,-89,-86,-73,-71,57,57,57,57,57,57,-84,57,57,-85,]),'GT':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[58,-72,-83,-78,-79,-42,-87,58,58,-75,-74,58,-77,-42,-80,-82,58,-56,-57,-58,-59,-60,-61,58,58,-64,-65,-66,-67,-68,-69,58,-88,58,-76,-81,-89,-86,-73,-71,58,58,58,58,58,58,-84,58,58,-85,]),'GTE':([19,22,31,34,35,36,38,65,68,84,85,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,136,137,138,140,143,145,146,147,153,155,156,159,166,180,187,189,190,],[59,-72,-83,-78,-79,-42,-87,59,59,-75,-74,59,-77,-42,-80,-82,59,-56,-57,-58,-59,-60,-61,59,59,-64,-65,-66,-67,-68,-69,59,-88,59,-76,-81,-89,-86,-73,-71,59,59,59,59,59,59,-84,59,59,-85,]),'LARRAY':([22,60,],[63,110,]),'ASSIGN':([22,31,60,72,73,74,77,145,146,],[-72,86,111,125,126,127,130,-73,-71,]),'RPAREN':([22,31,34,35,36,38,62,84,85,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,136,137,138,140,143,145,146,166,168,180,189,190,],[-72,-83,-78,-79,-42,-87,114,-75,-74,-77,-42,-80,-82,140,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,143,-90,-88,145,-70,-76,-81,-89,-86,-73,-71,180,-91,-84,190,-85,]),'RARRAY':([22,31,34,35,36,38,84,85,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,116,136,137,138,140,141,143,145,146,168,180,190,],[-72,-83,-78,-79,-42,-87,-75,-74,-77,-42,-80,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-90,-88,146,-70,-76,-81,-89,167,-86,-73,-71,-91,-84,-85,]),'ENDHEADING':([22,31,34,35,36,38,76,79,82,84,85,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,128,129,135,136,137,138,140,143,145,146,157,158,159,160,165,177,178,180,185,186,190,],[-72,-83,-78,-79,-42,-87,-17,-30,-42,-75,-74,-77,-42,-80,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-88,-42,-42,165,-70,-76,-81,-89,-86,-73,-71,-18,-19,-28,-29,-35,-31,-33,-84,-32,-34,-85,]),'ENDPARAM':([22,31,34,35,36,38,76,79,84,85,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,128,129,133,136,137,138,140,143,145,146,157,158,159,160,161,163,165,175,177,178,180,185,186,190,],[-72,-83,-78,-79,-42,-87,-17,-30,-75,-74,-77,-42,-80,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-88,-42,-42,-42,-70,-76,-81,-89,-86,-73,-71,-18,-19,-28,-29,-42,177,-35,185,-31,-33,-84,-32,-34,-85,]),'ENDFUNC':([22,31,34,35,36,38,76,79,84,85,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,128,129,134,136,137,138,140,143,145,146,157,158,159,160,162,164,165,176,177,178,180,185,186,190,],[-72,-83,-78,-79,-42,-87,-17,-30,-75,-74,-77,-42,-80,-82,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-88,-42,-42,-42,-70,-76,-81,-89,-86,-73,-71,-18,-19,-28,-29,-42,178,-35,186,-31,-33,-84,-32,-34,-85,]),'PARAM':([27,78,82,128,129,133,134,161,162,],[80,131,80,80,80,80,80,80,80,]),'FUNC':([27,78,82,128,129,133,134,161,162,],[81,132,81,81,81,81,81,81,81,]),'HEADING':([27,82,128,129,133,134,161,162,],[82,82,82,82,82,82,82,82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,],[1,]),'formlist':([0,8,],[2,13,]),'formula':([0,8,],[3,3,]),'empty':([0,8,11,23,26,27,28,36,43,44,70,82,89,111,118,119,121,122,123,128,129,133,134,161,162,171,173,],[4,4,20,20,71,79,20,91,20,20,71,79,91,20,20,20,20,20,71,79,79,79,79,79,79,20,20,]),'formid':([0,5,8,],[6,9,6,]),'formbody':([6,9,],[10,14,]),'stmlist':([11,23,28,43,44,118,119,121,122,171,173,],[15,64,83,94,95,148,149,150,151,181,183,]),'sectlist':([11,15,18,],[16,40,45,]),'stm':([11,23,28,43,44,111,118,119,121,122,171,173,],[17,17,17,17,17,142,17,17,17,17,17,17,]),'section':([11,15,18,],[18,18,18,]),'exp':([11,23,24,25,28,29,30,32,33,37,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,86,110,111,117,118,119,121,122,125,126,127,130,139,144,171,172,173,174,179,188,],[19,19,65,68,19,84,85,87,88,92,19,19,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,113,113,136,113,19,147,19,19,19,19,153,155,156,159,166,113,19,68,19,68,187,189,]),'lval':([11,23,24,25,28,29,30,32,33,37,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,86,110,111,117,118,119,121,122,125,126,127,130,139,144,171,172,173,174,179,188,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'ifbody':([25,172,174,],[67,182,184,]),'parmlist':([26,70,123,],[69,124,152,]),'parm':([26,70,123,],[70,70,70,]),'setlist':([27,82,128,129,133,134,161,162,],[75,135,157,158,163,164,175,176,]),'set':([27,82,128,129,133,134,161,162,],[76,76,76,76,76,76,76,76,]),'stringlist':([36,89,],[90,138,]),'arglist':([61,62,63,110,144,],[112,115,116,141,168,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> formlist','file',1,'p_file','fractparser.py',26),
  ('formlist -> formula NEWLINE formlist','formlist',3,'p_formlist','fractparser.py',31),
  ('formlist -> formula','formlist',1,'p_formlist_singleform','fractparser.py',35),
  ('formlist -> empty','formlist',1,'p_formlist_empty','fractparser.py',39),
  ('formlist -> error','formlist',1,'p_formlist_empty','fractparser.py',40),
  ('formid -> FORM_ID','formid',1,'p_formid','fractparser.py',44),
  ('formula -> formid formbody','formula',2,'p_formula','fractparser.py',49),
  ('formula -> error formid formbody','formula',3,'p_formula_err','fractparser.py',54),
  ('formbody -> NEWLINE stmlist sectlist FORM_END','formbody',4,'p_formbody_2','fractparser.py',58),
  ('formbody -> NEWLINE stmlist FORM_END','formbody',3,'p_formbody_3','fractparser.py',62),
  ('formbody -> error FORM_END','formbody',2,'p_formbody_err','fractparser.py',66),
  ('formbody -> NEWLINE sectlist FORM_END','formbody',3,'p_formbody_sectlist','fractparser.py',70),
  ('sectlist -> section sectlist','sectlist',2,'p_sectlist_2','fractparser.py',74),
  ('sectlist -> section','sectlist',1,'p_sectlist_section','fractparser.py',78),
  ('section -> SECT_PARMS parmlist','section',2,'p_section_parm','fractparser.py',82),
  ('section -> SECT_SET setlist','section',2,'p_section_set','fractparser.py',86),
  ('setlist -> set','setlist',1,'p_setlist_set','fractparser.py',90),
  ('setlist -> set NEWLINE setlist','setlist',3,'p_setlist_2','fractparser.py',94),
  ('setlist -> set COMMA setlist','setlist',3,'p_setlist_2','fractparser.py',95),
  ('parmlist -> parm','parmlist',1,'p_parmlist_parm','fractparser.py',99),
  ('parmlist -> parm NEWLINE parmlist','parmlist',3,'p_parmlist_2','fractparser.py',103),
  ('parmlist -> parm parmlist','parmlist',2,'p_parmlist_3','fractparser.py',107),
  ('parm -> empty','parm',1,'p_parm_empty','fractparser.py',111),
  ('parm -> ID ASSIGN exp','parm',3,'p_parm_exp','fractparser.py',116),
  ('parm -> TYPE ASSIGN exp','parm',3,'p_parm_exp','fractparser.py',117),
  ('parm -> REPEAT ASSIGN exp','parm',3,'p_parm_exp','fractparser.py',118),
  ('parm -> ID ASSIGN TYPE','parm',3,'p_parm_type','fractparser.py',122),
  ('set -> ID ASSIGN exp','set',3,'p_set_exp','fractparser.py',126),
  ('set -> ID ASSIGN TYPE','set',3,'p_set_type','fractparser.py',130),
  ('set -> empty','set',1,'p_set_empty','fractparser.py',134),
  ('set -> PARAM ID setlist ENDPARAM','set',4,'p_set_param','fractparser.py',138),
  ('set -> TYPE PARAM ID setlist ENDPARAM','set',5,'p_set_typed_param','fractparser.py',142),
  ('set -> FUNC ID setlist ENDFUNC','set',4,'p_set_func','fractparser.py',146),
  ('set -> TYPE FUNC ID setlist ENDFUNC','set',5,'p_set_typed_func','fractparser.py',150),
  ('set -> HEADING setlist ENDHEADING','set',3,'p_set_heading','fractparser.py',154),
  ('section -> SECT_STM stmlist','section',2,'p_section_stm_2','fractparser.py',158),
  ('stmlist -> stm','stmlist',1,'p_stmlist_stm','fractparser.py',168),
  ('stmlist -> stm NEWLINE stmlist','stmlist',3,'p_stmlist_2','fractparser.py',172),
  ('stmlist -> stm COMMA stmlist','stmlist',3,'p_stmlist_2','fractparser.py',173),
  ('stm -> exp','stm',1,'p_stm_exp','fractparser.py',177),
  ('stm -> empty','stm',1,'p_stm_empty','fractparser.py',181),
  ('empty -> <empty>','empty',0,'p_empty','fractparser.py',185),
  ('stm -> TYPE ID LARRAY arglist RARRAY','stm',5,'p_stm_decl_array','fractparser.py',189),
  ('stm -> TYPE ID','stm',2,'p_stm_decl','fractparser.py',193),
  ('stm -> TYPE ID ASSIGN stm','stm',4,'p_stm_assign','fractparser.py',197),
  ('stm -> REPEAT stmlist UNTIL exp','stm',4,'p_stm_repeat','fractparser.py',201),
  ('stm -> WHILE exp NEWLINE stmlist ENDWHILE','stm',5,'p_stm_while','fractparser.py',205),
  ('stm -> WHILE exp COMMA stmlist ENDWHILE','stm',5,'p_stm_while','fractparser.py',206),
  ('stm -> IF ifbody ENDIF','stm',3,'p_stm_if','fractparser.py',210),
  ('ifbody -> exp NEWLINE stmlist','ifbody',3,'p_ifbody','fractparser.py',214),
  ('ifbody -> exp COMMA stmlist','ifbody',3,'p_ifbody','fractparser.py',215),
  ('ifbody -> exp NEWLINE stmlist ELSE stmlist','ifbody',5,'p_ifbody_else','fractparser.py',219),
  ('ifbody -> exp COMMA stmlist ELSE stmlist','ifbody',5,'p_ifbody_else','fractparser.py',220),
  ('ifbody -> exp NEWLINE stmlist ELSEIF ifbody','ifbody',5,'p_ifbody_elseif','fractparser.py',224),
  ('ifbody -> exp COMMA stmlist ELSEIF ifbody','ifbody',5,'p_ifbody_elseif','fractparser.py',225),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','fractparser.py',229),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','fractparser.py',230),
  ('exp -> exp TIMES exp','exp',3,'p_exp_binop','fractparser.py',231),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','fractparser.py',232),
  ('exp -> exp MOD exp','exp',3,'p_exp_binop','fractparser.py',233),
  ('exp -> exp POWER exp','exp',3,'p_exp_binop','fractparser.py',234),
  ('exp -> exp BOOL_OR exp','exp',3,'p_exp_binop','fractparser.py',235),
  ('exp -> exp BOOL_AND exp','exp',3,'p_exp_binop','fractparser.py',236),
  ('exp -> exp EQ exp','exp',3,'p_exp_binop','fractparser.py',237),
  ('exp -> exp NEQ exp','exp',3,'p_exp_binop','fractparser.py',238),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','fractparser.py',239),
  ('exp -> exp LTE exp','exp',3,'p_exp_binop','fractparser.py',240),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','fractparser.py',241),
  ('exp -> exp GTE exp','exp',3,'p_exp_binop','fractparser.py',242),
  ('exp -> lval ASSIGN exp','exp',3,'p_exp_assign','fractparser.py',247),
  ('lval -> ID LARRAY arglist RARRAY','lval',4,'p_lval_id_array','fractparser.py',251),
  ('lval -> ID','lval',1,'p_lval_id','fractparser.py',255),
  ('lval -> ID LPAREN arglist RPAREN','lval',4,'p_lval_funcall','fractparser.py',259),
  ('exp -> MINUS exp','exp',2,'p_exp_uminus','fractparser.py',263),
  ('exp -> PLUS exp','exp',2,'p_exp_uplus','fractparser.py',268),
  ('exp -> MAG exp MAG','exp',3,'p_exp_mag','fractparser.py',272),
  ('exp -> BOOL_NEG exp','exp',2,'p_exp_neg','fractparser.py',276),
  ('exp -> NUMBER','exp',1,'p_exp_num','fractparser.py',280),
  ('exp -> CONST','exp',1,'p_exp_boolconst','fractparser.py',284),
  ('exp -> STRING stringlist','exp',2,'p_exp_string','fractparser.py',288),
  ('stringlist -> STRING stringlist','stringlist',2,'p_stringlist_string','fractparser.py',292),
  ('stringlist -> empty','stringlist',1,'p_stringlist_empty','fractparser.py',296),
  ('exp -> lval','exp',1,'p_exp_lval','fractparser.py',300),
  ('exp -> LPAREN exp COMMA exp RPAREN','exp',5,'p_exp_complex','fractparser.py',304),
  ('exp -> LPAREN exp COMMA exp COMMA exp COMMA exp RPAREN','exp',9,'p_exp_hyper','fractparser.py',308),
  ('exp -> TYPE LPAREN arglist RPAREN','exp',4,'p_exp_ctor','fractparser.py',312),
  ('exp -> COMPLEX','exp',1,'p_exp_complex_i','fractparser.py',316),
  ('exp -> ID LPAREN RPAREN','exp',3,'p_exp_funcall_noargs','fractparser.py',321),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_parexp','fractparser.py',325),
  ('arglist -> exp','arglist',1,'p_arglist_exp','fractparser.py',329),
  ('arglist -> arglist COMMA arglist','arglist',3,'p_arglist_2','fractparser.py',333),
]
